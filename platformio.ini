; PlatformIO Project Configuration File for EMS-ESP
; override any settings with your own local ones in pio_local.ini

[platformio]
default_envs = esp32_4M
; default_envs = esp32_16M

extra_configs = 
  factory_settings.ini
  pio_local.ini

[common]
core_build_flags =
  -Wall
  -D CORE_DEBUG_LEVEL=0
  -D NDEBUG
  -D ARDUINO_ARCH_ESP32=1
  -D ESP32=1

core_unbuild_flags =  

; my_build_flags is set in pio_local.ini
my_build_flags =

build_flags =
  ${common.core_build_flags}
  ${factory_settings.build_flags}
  ${common.my_build_flags}
  -D ONEWIRE_CRC16=0
  -D NO_GLOBAL_ARDUINOOTA
  -D ARDUINOJSON_ENABLE_STD_STRING=1
  -D ARDUINOJSON_USE_DOUBLE=0
  -D CONFIG_UART_ISR_IN_IRAM

unbuild_flags =
  ${common.core_unbuild_flags}

[env]
framework = arduino
monitor_speed = 115200
monitor_raw = yes
upload_speed = 921600
build_type = release
lib_ldf_mode = chain+
debug_build_flags = -Os # optimize for size

check_tool = cppcheck, clangtidy
check_severity = high, medium
check_flags =
  cppcheck: --std=c++11 -v
  clangtidy: --checks=-*,clang-analyzer-*,performance-*

; build for GitHub Actions CI
; the Web interface is built seperately
[env:ci]
extra_scripts = scripts/rename_fw.py
board = esp32dev
platform = espressif32
board_build.partitions = esp32_partition_4M.csv 
build_flags = ${common.build_flags}
build_unflags = ${common.unbuild_flags}

[env:esp32_4M]
extra_scripts =
  pre:scripts/build_interface.py
  scripts/rename_fw.py
board = esp32dev
platform = espressif32
board_upload.flash_size = 4MB
board_build.partitions = esp32_partition_4M.csv
build_flags = ${common.build_flags}
build_unflags = ${common.unbuild_flags}

[env:esp32_16M]
extra_scripts =
  pre:scripts/build_interface.py
  scripts/rename_fw.py
board = esp32dev
platform = espressif32
board_upload.flash_size = 16MB
board_build.partitions = esp32_partition_16M.csv
build_flags = ${common.build_flags}
build_unflags = ${common.unbuild_flags}
